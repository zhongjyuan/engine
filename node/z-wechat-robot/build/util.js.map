{"version":3,"sources":["../src/util.js"],"names":["ok","equal","notEqual","isBrowserEnv","formatNumber","randomString","generateClientMsgID","generateDeviceID","convertEmoji","isUrl","clearHtmlStr","htmlEncode","htmlDecode","getSize","debug","actual","response","Assert","e","request","expected","window","document","createElement","number","length","isNaN","toString","paddingLength","Array","join","prefix","randomNum","Math","round","random","currentTimeStamp","Date","now","toFixed","replace","substring","inputString","emojiMap","match","capture","emojiCode","toLowerCase","codePoints","push","slice","Error","String","fromCodePoint","error","str","_urlReg","RegExp","test","bytes","cRound","BIT_OF_KB","BIT_OF_MB","BYTE_OF_KB","BYTE_OF_MB","bytesInMB","bytesInKB"],"mappings":"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","file":"util.js","sourcesContent":["import _debug from \"debug\";\r\nimport Assert from \"assert\";\r\n\r\nconst debug = _debug(\"assert\");\r\n\r\n/**\r\n * 断言实际值为真\r\n * @param {*} actual - 实际值\r\n * @param {object} response - HTTP 响应对象\r\n *\r\n * @example\r\n * assert.ok(2 + 2 === 4, response);\r\n */\r\nexport function ok(actual, response) {\r\n\ttry {\r\n\t\tAssert.ok(actual);\r\n\t} catch (e) {\r\n\t\tdebug(e);\r\n\t\tdelete response.request;\r\n\t\te.response = response;\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n/**\r\n * 断言实际值等于期望值\r\n * @param {*} actual - 实际值\r\n * @param {*} expected - 期望值\r\n * @param {object} response - HTTP 响应对象\r\n *\r\n * @example\r\n * assert.equal(2 + 2, 4, response);\r\n */\r\nexport function equal(actual, expected, response) {\r\n\ttry {\r\n\t\tAssert.equal(actual, expected);\r\n\t} catch (e) {\r\n\t\tdebug(e);\r\n\t\tdelete response.request;\r\n\t\te.response = response;\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n/**\r\n * 断言实际值不等于期望值\r\n * @param {*} actual - 实际值\r\n * @param {*} expected - 期望值\r\n * @param {object} response - HTTP 响应对象\r\n *\r\n * @example\r\n * assert.notEqual(2 + 2, 5, response);\r\n */\r\nexport function notEqual(actual, expected, response) {\r\n\ttry {\r\n\t\tAssert.notEqual(actual, expected);\r\n\t} catch (e) {\r\n\t\tdebug(e);\r\n\t\tdelete response.request;\r\n\t\te.response = response;\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n/**\r\n * 检查当前环境是否为浏览器环境\r\n * @returns {boolean} - 如果当前环境为浏览器环境，则返回 true；否则返回 false。\r\n *\r\n * @example\r\n * const browserEnv = isBrowserEnv();\r\n * console.log(browserEnv); // 输出 true 或 false，表示当前环境是否为浏览器环境\r\n */\r\nexport function isBrowserEnv() {\r\n\treturn typeof window !== \"undefined\" && typeof document !== \"undefined\" && typeof document.createElement === \"function\";\r\n}\r\n\r\n/**\r\n * 格式化数字，将数字转换为指定长度的字符串，并在不足长度时在前面补零\r\n * @param {number} number - 要格式化的数字\r\n * @param {number} length - 格式化后的字符串长度\r\n * @returns {string} - 格式化后的字符串\r\n *\r\n * @example\r\n * const formattedNumber = formatNumber(5, 3);\r\n * console.log(formattedNumber); // 输出 \"005\"\r\n *\r\n * const formattedNumber2 = formatNumber(123, 2);\r\n * console.log(formattedNumber2); // 输出 \"123\"\r\n */\r\nexport function formatNumber(number, length) {\r\n\tnumber = (isNaN(number) ? 0 : number).toString();\r\n\tlet paddingLength = length - number.length;\r\n\r\n\treturn paddingLength > 0 ? [new Array(paddingLength + 1).join(\"0\"), number].join(\"\") : number;\r\n}\r\n\r\n/**\r\n * 生成一个随机数字符串，用于设置 Cookie 中的 pgv_pvi 和 pgv_si 属性\r\n * @param {string} [prefix=\"\"] - 字符串前缀\r\n * @returns {string} - 随机数字符串\r\n *\r\n * @example\r\n * const string = randomString(\"prefix\"); // 生成以 \"prefix\" 为前缀的随机数字符串\r\n * console.log(string); // 输出类似于 \"prefix1234567890\" 的字符串\r\n */\r\nexport function randomString(prefix = \"\") {\r\n\tconst randomNum = Math.round(Math.random() || 0.5) * 2147483647;\r\n\tconst currentTimeStamp = +new Date() % 1e10;\r\n\tconst randomString = `${prefix}${randomNum * currentTimeStamp}`;\r\n\r\n\treturn randomString;\r\n}\r\n\r\n/**\r\n * 生成客户端消息 ID\r\n * @returns {string} - 客户端消息 ID\r\n */\r\nexport function generateClientMsgID() {\r\n\treturn (Date.now() + Math.random().toFixed(3)).replace(\".\", \"\");\r\n}\r\n\r\n/**\r\n * 生成设备 ID\r\n * @returns {string} - 设备 ID\r\n */\r\nexport function generateDeviceID() {\r\n\treturn \"e\" + (\"\" + Math.random().toFixed(15)).substring(2, 17);\r\n}\r\n\r\n/**\r\n * 将包含表情符号的字符串转换为对应的 Unicode 表情字符\r\n * @param {string} inputString - 包含表情符号的字符串\r\n * @returns {string} - 转换后的字符串\r\n */\r\nexport function convertEmoji(inputString) {\r\n\t// 如果输入字符串为空，则返回空字符串\r\n\tif (!inputString) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t// 表情符号映射关系\r\n\tconst emojiMap = {\r\n\t\t\"1f639\": \"1f602\", // 替换 1f639 表情为 1f602\r\n\t\t\"1f64d\": \"1f614\", // 替换 1f64d 表情为 1f614\r\n\t};\r\n\r\n\ttry {\r\n\t\t// 使用正则表达式替换匹配到的表情符号\r\n\t\treturn inputString.replace(/<span.*?class=\"emoji emoji(.*?)\"><\\/span>/g, (match, capture) => {\r\n\t\t\tconst emojiCode = emojiMap[capture.toLowerCase()] || capture;\r\n\r\n\t\t\tconst codePoints = [];\r\n\t\t\tif (emojiCode.length === 4 || emojiCode.length === 5) {\r\n\t\t\t\tcodePoints.push(\"0x\" + emojiCode); // 添加第一个代码点\r\n\t\t\t} else if (emojiCode.length === 8) {\r\n\t\t\t\tcodePoints.push(\"0x\" + emojiCode.slice(0, 4)); // 添加第一个代码点\r\n\t\t\t\tcodePoints.push(\"0x\" + emojiCode.slice(4, 8)); // 添加第二个代码点\r\n\t\t\t} else if (emojiCode.length === 10) {\r\n\t\t\t\tcodePoints.push(\"0x\" + emojiCode.slice(0, 5)); // 添加第一个代码点\r\n\t\t\t\tcodePoints.push(\"0x\" + emojiCode.slice(5, 10)); // 添加第二个代码点\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Unknown emoji characters\"); // 抛出错误，表示未知的表情字符\r\n\t\t\t}\r\n\r\n\t\t\treturn String.fromCodePoint(...codePoints); // 使用代码点生成 Unicode 表情字符\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdebug(error);\r\n\t\treturn \"*\"; // 发生错误时返回星号作为占位符\r\n\t}\r\n}\r\n\r\nexport function isUrl(str) {\r\n\tvar _urlReg = \"(\\\\s|\\\\n|<br>|^)(http(s)?://.)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?(&|&amp;)//=]*)\";\r\n\r\n\treturn new RegExp(_urlReg, \"i\").test(str);\r\n}\r\n\r\nexport function clearHtmlStr(str) {\r\n\treturn str ? str.replace(/<[^>]*>/g, \"\") : str;\r\n}\r\n\r\nexport function htmlEncode(str) {\r\n\tif (typeof str != \"string\") return \"\";\r\n\treturn str.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n}\r\n\r\nexport function htmlDecode(str) {\r\n\tif (!str || str.length == 0) return \"\";\r\n\treturn str\r\n\t\t.replace(/&lt;/g, \"<\")\r\n\t\t.replace(/&gt;/g, \">\")\r\n\t\t.replace(/&#39;/g, \"'\")\r\n\t\t.replace(/&quot;/g, '\"')\r\n\t\t.replace(/&amp;/g, \"&\");\r\n}\r\n\r\nexport function getSize(bytes) {\r\n\tbytes = +bytes;\r\n\r\n\tif (!bytes) return;\r\n\r\n\tvar cRound = 10;\r\n\tvar BIT_OF_KB = 10,\r\n\t\tBIT_OF_MB = 20,\r\n\t\tBYTE_OF_KB = 1 << BIT_OF_KB,\r\n\t\tBYTE_OF_MB = 1 << BIT_OF_MB;\r\n\r\n\t// > 1MB\r\n\tif (bytes >> BIT_OF_MB > 0) {\r\n\t\tvar bytesInMB = Math.round((bytes * cRound) / BYTE_OF_MB) / cRound;\r\n\t\treturn \"\" + bytesInMB + \"MB\";\r\n\t}\r\n\r\n\t// > 0.5K\r\n\tif (bytes >> (BIT_OF_KB - 1) > 0) {\r\n\t\tvar bytesInKB = Math.round((bytes * cRound) / BYTE_OF_KB) / cRound;\r\n\t\treturn \"\" + bytesInKB + \"KB\";\r\n\t}\r\n\r\n\treturn \"\" + bytes + \"B\";\r\n}\r\n"]}