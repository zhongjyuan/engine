{"version":3,"sources":["../../modules/weixin-server/src/core.js"],"names":["debug","AlreadyLogoutError","message","constructor","__proto__","prototype","Error","WeixinCore","data","STATE","_prop","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","_user","_cookie","_config","_data","_request","Request","Cookie","Uin","parseInt","Sid","Skey","DeviceID","SyncKey","syncKeyList","SyncCheckKey","item","push","Key","Val","join","method","url","API_jsLogin","res","window","QRLogin","eval","code","tips","params","tip","loginicon","API_login","redirect_uri","match","rediUri","userAvatar","fun","pm","headers","forEach","test","r","Date","pass_ticket","BaseRequest","_baseRequest","API_webwxinit","initData","BaseResponse","Ret","SYNCCHECK_RET_LOGOUT","SKey","_updateSyncKey","Object","assign","User","to","lang","Code","FromUserName","UserName","ToUserName","ClientMsgId","API_webwxstatusnotify","responseData","seq","API_webwxgetcontact","contacts","type","Count","length","API_webwxbatchgetcontact","ContactList","text","actions","action","time","JSON","stringify","Text","Type","API_webwxreport","deviceid","synckey","API_synccheck","synccheck","ex","retcode","selector","SYNCCHECK_RET_SUCCESS","rr","API_webwxsync","redirect","API_webwxlogout","msg","clientMsgId","Scene","Msg","MSGTYPE_TEXT","Content","LocalID","API_webwxsendmsg","id","MSGTYPE_EMOTICON","EmojiFlag","indexOf","MediaId","EMoticonMd5","API_webwxsendemoticon","file","filename","toUserName","name","size","ext","mediatype","File","Blob","Buffer","isBuffer","mime","lookup","readable","path","basename","Promise","resolve","reject","pipe","err","buffer","toLowerCase","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","form","FormData","append","toGMTString","encodeURI","contentType","knownLength","formDataPromise","isBrowserEnv","getHeaders","f","API_webwxuploadmedia","mediaId","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","content","APPMSGTYPE_ATTACH","API_webwxsendappmsg","MsgType","replace","MSGTYPE_MICROVIDEO","MSGTYPE_APP","SubMsgType","MSGTYPE_LOCATION","OriContent","AppMsgType","msgId","SvrMsgId","API_webwxrevokemsg","result","MsgID","responseType","API_webwxgetmsgimg","Range","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","Ticket","Opcode","VerifyUserListSize","VerifyUserList","Value","VerifyUserTicket","VerifyContent","SceneListCount","SceneList","API_webwxverifyuser","NickName","Topic","MemberList","MemberCount","API_webwxcreatechatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","NewName","NewTopic","RemarkName","CmdId","API_webwxoplog","OP","keys","key","PROP","CONF","COOKIE","user"],"mappings":"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","file":"core.js","sourcesContent":["import bl from \"bl\";\nimport path from \"path\";\nimport mime from \"mime\";\nimport _debug from \"debug\";\nimport FormData from \"form-data\";\n\nimport { getConfig } from \"./config\";\nimport { Request } from \"./utils/request\";\nimport { equal, notEqual } from \"./utils/assert\";\nimport { isBrowserEnv, generateDeviceID, generateClientMsgID } from \"./utils/global\";\n\nconst debug = _debug(\"core\");\n\nexport class AlreadyLogoutError extends Error {\n\tconstructor(message = \"already logout\") {\n\t\tsuper(message);\n\n\t\tthis.constructor = AlreadyLogoutError;\n\n\t\tthis.__proto__ = AlreadyLogoutError.prototype;\n\t}\n}\n\n/**\n * 微信核心类\n */\nexport default class WeixinCore {\n\t/**\n\t * 创建一个 WechatCore 的实例\n\t * @param {Object} data - 数据对象\n\t */\n\tconstructor(data) {\n\t\tthis.STATE = getConfig().STATE;\n\t\t\n\t\t/**\n\t\t * 存储核心属性的对象\n\t\t * @type {Object}\n\t\t */\n\t\tthis._prop = {\n\t\t\tuuid: \"\",\n\t\t\tuin: \"\",\n\t\t\tsid: \"\",\n\t\t\tskey: \"\",\n\t\t\tpassTicket: \"\",\n\t\t\tformatedSyncKey: \"\",\n\t\t\twebwxDataTicket: \"\",\n\t\t\tsyncKey: { List: [] },\n\t\t};\n\n\t\t/**\n\t\t * 用户信息\n\t\t * @type {Object}\n\t\t */\n\t\tthis._user = {};\n\n\t\t/**\n\t\t * 存储 COOKIE 的对象\n\t\t * @type {Object}\n\t\t */\n\t\tthis._cookie = {};\n\n\t\t/**\n\t\t * 配置信息\n\t\t * @type {Object}\n\t\t */\n\t\tthis._config = getConfig();\n\n\t\t/**\n\t\t * 存储数据对象\n\t\t * @type {Object}\n\t\t */\n\t\tthis._data = data || {};\n\n\t\t/**\n\t\t * 请求对象\n\t\t * @type {Request}\n\t\t */\n\t\tthis._request = new Request({ Cookie: this._cookie });\n\t}\n\n\t/**\n\t * 设置 botData 对象\n\t * @param {Object} data - 数据对象\n\t */\n\tset Data(data) {\n\t\t/**\n\t\t * 遍历 data 对象的键，并将对应键的值复制给 this 对象的相应属性\n\t\t */\n\t\tObject.keys(data).forEach((key) => {\n\t\t\tObject.assign(this[key], data[key]);\n\t\t});\n\t}\n\n\t/**\n\t * 获取 botData 对象\n\t * @returns {Object} botData 对象\n\t */\n\tget Data() {\n\t\treturn {\n\t\t\t/**\n\t\t\t * 存储 PROP 属性的对象\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tPROP: this._prop,\n\t\t\t/**\n\t\t\t * 存储 CONF 属性的对象\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tCONF: this._config,\n\t\t\t/**\n\t\t\t * 存储 COOKIE 属性的对象\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tCOOKIE: this._cookie,\n\t\t\t/**\n\t\t\t * 存储 user 属性的对象\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tuser: this._user,\n\t\t};\n\t}\n\n\t/**\n\t * 获取基础请求数据\n\t * @returns {Object} 基础请求数据对象\n\t */\n\t_baseRequest() {\n\t\treturn {\n\t\t\tUin: parseInt(this._prop.uin),\n\t\t\tSid: this._prop.sid,\n\t\t\tSkey: this._prop.skey,\n\t\t\tDeviceID: generateDeviceID(),\n\t\t};\n\t}\n\n\t/**\n\t * 更新同步键\n\t * @param {Object} data - 同步数据对象\n\t */\n\t_updateSyncKey(data) {\n\t\tif (data.SyncKey) {\n\t\t\tthis._prop.syncKey = data.SyncKey;\n\t\t}\n\n\t\tlet syncKeyList = [];\n\n\t\tif (data.SyncCheckKey) {\n\t\t\tfor (let item of data.SyncCheckKey.List) {\n\t\t\t\tsyncKeyList.push(`${item.Key}_${item.Val}`);\n\t\t\t}\n\t\t} else if (!this._prop.formatedSyncKey && data.SyncKey) {\n\t\t\tfor (let item of data.SyncKey.List) {\n\t\t\t\tsyncKeyList.push(`${item.Key}_${item.Val}`);\n\t\t\t}\n\t\t}\n\n\t\tthis._prop.formatedSyncKey = syncKeyList.join(\"|\");\n\t}\n\n\t/**\n\t * 获取 UUID\n\t * @returns {Promise<string>} Promise 对象，包含获取到的 UUID 字符串\n\t */\n\tasync getUUID() {\n\t\ttry {\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\turl: this._config.API_jsLogin,\n\t\t\t});\n\n\t\t\tlet window = {\n\t\t\t\tQRLogin: {},\n\t\t\t};\n\n\t\t\t// res.data: \"window.QRLogin.code = xxx; ...\"\n\n\t\t\teval(res.data);\n\t\t\tequal(window.QRLogin.code, 200, res);\n\n\t\t\tthis._prop.uuid = window.QRLogin.uuid;\n\t\t\treturn window.QRLogin.uuid;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取UUID失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 检查登录状态\n\t * @returns {Promise<object>} Promise 对象，包含检查结果的对象\n\t */\n\tasync checkLogin() {\n\t\ttry {\n\t\t\tlet params = {\n\t\t\t\ttip: 0,\n\t\t\t\tloginicon: true,\n\t\t\t\tuuid: this._prop.uuid,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tparams: params,\n\t\t\t\turl: this._config.API_login,\n\t\t\t});\n\n\t\t\tlet window = {};\n\n\t\t\teval(res.data);\n\t\t\tnotEqual(window.code, 400, res);\n\n\t\t\tif (window.code === 200) {\n\t\t\t\tthis._config = getConfig(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0]);\n\t\t\t\tthis.rediUri = window.redirect_uri;\n\t\t\t} else if (window.code === 201 && window.userAvatar) {\n\t\t\t\t// this._user.userAvatar = window.userAvatar\n\t\t\t}\n\t\t\treturn window;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取手机确认登录信息失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 登录\n\t * @returns {Promise<void>} Promise 对象，表示登录操作完成\n\t */\n\tasync login() {\n\t\ttry {\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tparams: {\n\t\t\t\t\tfun: \"new\",\n\t\t\t\t},\n\t\t\t\turl: this.rediUri,\n\t\t\t});\n\n\t\t\tlet pm = res.data.match(/<ret>(.*)<\\/ret>/);\n\t\t\tif (pm && pm[1] === \"0\") {\n\t\t\t\tthis._prop.skey = res.data.match(/<skey>(.*)<\\/skey>/)[1];\n\t\t\t\tthis._prop.sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1];\n\t\t\t\tthis._prop.uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1];\n\t\t\t\tthis._prop.passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1];\n\t\t\t}\n\t\t\tif (res.headers[\"set-cookie\"]) {\n\t\t\t\tres.headers[\"set-cookie\"].forEach((item) => {\n\t\t\t\t\tif (/webwx.*?data.*?ticket/i.test(item)) {\n\t\t\t\t\t\tthis._prop.webwxDataTicket = item.match(/=(.*?);/)[1];\n\t\t\t\t\t} else if (/wxuin/i.test(item)) {\n\t\t\t\t\t\tthis._prop.uin = item.match(/=(.*?);/)[1];\n\t\t\t\t\t} else if (/wxsid/i.test(item)) {\n\t\t\t\t\t\tthis._prop.sid = item.match(/=(.*?);/)[1];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"登录失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 初始化微信\n\t * @returns {Promise<Object>} Promise 对象，表示初始化操作完成，并返回初始化后的数据对象\n\t */\n\tasync init() {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tr: ~new Date(),\n\t\t\t\tskey: this._prop.skey,\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: data,\n\t\t\t\tparams: params,\n\t\t\t\turl: this._config.API_webwxinit,\n\t\t\t});\n\n\t\t\tconst initData = res.data;\n\t\t\tif (initData.BaseResponse.Ret == this._config.SYNCCHECK_RET_LOGOUT) {\n\t\t\t\tthrow new AlreadyLogoutError();\n\t\t\t}\n\n\t\t\tequal(initData.BaseResponse.Ret, 0, res);\n\n\t\t\tthis._prop.skey = initData.SKey || this._prop.skey;\n\n\t\t\tthis._updateSyncKey(initData);\n\n\t\t\tObject.assign(this._user, initData.User);\n\n\t\t\treturn initData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"微信初始化失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 发送手机状态通知\n\t * @param {string} to - 接收通知的用户ID（可选）\n\t * @returns {Promise<void>} Promise 对象，表示手机状态通知操作完成\n\t */\n\tasync sendMobileNotification(to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tCode: to ? 1 : 3,\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tFromUserName: this._user.UserName,\n\t\t\t\tToUserName: to || this._user.UserName,\n\t\t\t\tClientMsgId: generateClientMsgID(),\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: data,\n\t\t\t\tparams: params,\n\t\t\t\turl: this._config.API_webwxstatusnotify,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"手机状态通知失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 获取通讯录\n\t * @param {number} seq - 通讯录序列号（可选，默认为0）\n\t * @returns {Promise<Object>} Promise 对象，表示获取通讯录的结果\n\t */\n\tasync fetchContacts(seq = 0) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tseq: seq,\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tr: +new Date(),\n\t\t\t\tskey: this._prop.skey,\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\turl: this._config.API_webwxgetcontact,\n\t\t\t});\n\n\t\t\tconst data = res.data;\n\t\t\tequal(data.BaseResponse.Ret, 0, res);\n\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取通讯录失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 批量获取联系人详细信息\n\t * @param {Array} contacts - 联系人列表\n\t * @returns {Promise<Array>} - Promise 对象，表示批量获取联系人详细信息的结果\n\t */\n\tasync fetchBatchContactInfo(contacts) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\ttype: \"ex\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tr: +new Date(),\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tCount: contacts.length,\n\t\t\t\tList: contacts,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxbatchgetcontact,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData.ContactList;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"批量获取联系人失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 发送状态报告\n\t * @param {Object} text - 状态报告文本，包含操作记录等信息\n\t * @returns {Promise<Object>} Promise 对象，表示发送状态报告的结果\n\t */\n\tasync sendStatReport(text) {\n\t\ttry {\n\t\t\ttext = text || {\n\t\t\t\ttype: \"[action-record]\",\n\t\t\t\tdata: {\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"click\",\n\t\t\t\t\t\t\taction: \"发送框\",\n\t\t\t\t\t\t\ttime: +new Date(),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t};\n\n\t\t\ttext = JSON.stringify(text);\n\n\t\t\tconst params = {\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t\tfun: \"new\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tCount: 1,\n\t\t\t\tList: [\n\t\t\t\t\t{\n\t\t\t\t\t\tText: text,\n\t\t\t\t\t\tType: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\n\n\t\t\treturn await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxreport,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"状态报告失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 执行同步检查\n\t * @returns {Promise<number>} Promise 对象，表示同步检查结果中的 selector 值\n\t */\n\tasync performSyncCheck() {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tr: +new Date(),\n\t\t\t\tsid: this._prop.sid,\n\t\t\t\tuin: this._prop.uin,\n\t\t\t\tskey: this._prop.skey,\n\t\t\t\tdeviceid: generateDeviceID(),\n\t\t\t\tsynckey: this._prop.formatedSyncKey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tparams: params,\n\t\t\t\turl: this._config.API_synccheck,\n\t\t\t});\n\n\t\t\tlet window = {\n\t\t\t\tsynccheck: {},\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\teval(res.data);\n\t\t\t} catch (ex) {\n\t\t\t\twindow.synccheck = { retcode: \"0\", selector: \"0\" };\n\t\t\t}\n\n\t\t\tif (window.synccheck.retcode == this._config.SYNCCHECK_RET_LOGOUT) {\n\t\t\t\tthrow new AlreadyLogoutError();\n\t\t\t}\n\n\t\t\tequal(window.synccheck.retcode, this._config.SYNCCHECK_RET_SUCCESS, res);\n\n\t\t\treturn window.synccheck.selector;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"同步失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 执行同步操作\n\t * @returns {Promise<Object>} Promise 对象，表示同步结果的数据对象\n\t */\n\tasync performSync() {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tsid: this._prop.sid,\n\t\t\t\tskey: this._prop.skey,\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tSyncKey: this._prop.syncKey,\n\t\t\t\trr: ~new Date(),\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxsync,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\n\t\t\tif (responseData.BaseResponse.Ret == this._config.SYNCCHECK_RET_LOGOUT) {\n\t\t\t\tthrow new AlreadyLogoutError();\n\t\t\t}\n\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\tthis._updateSyncKey(responseData);\n\t\t\tthis._prop.skey = responseData.SKey || this._prop.skey;\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取新信息失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 登出\n\t * @returns {Promise<string>} Promise 对象，表示登出结果的消息字符串\n\t */\n\tasync logout() {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\ttype: 0,\n\t\t\t\tredirect: 1,\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tskey: this._prop.skey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\turl: this._config.API_webwxlogout,\n\t\t\t});\n\n\t\t\treturn \"登出成功\";\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\treturn \"可能登出成功\";\n\t\t}\n\t}\n\n\t/**\n\t * 发送文本消息\n\t * @param {string} msg - 要发送的消息内容\n\t * @param {string} to - 目标用户的 UserName\n\t * @returns {Promise<Object>} Promise 对象，表示发送消息结果的数据对象\n\t * @throws {Error} 如果发送消息失败，则会抛出异常\n\t */\n\tasync sendTextMessage(msg, to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\t\t\tconst data = {\n\t\t\t\tScene: 0,\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tMsg: {\n\t\t\t\t\tType: this._config.MSGTYPE_TEXT,\n\t\t\t\t\tContent: msg,\n\t\t\t\t\tToUserName: to,\n\t\t\t\t\tLocalID: clientMsgId,\n\t\t\t\t\tClientMsgId: clientMsgId,\n\t\t\t\t\tFromUserName: this._user[\"UserName\"],\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxsendmsg,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"发送文本信息失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 发送表情消息\n\t * @param {string} id - 表情消息ID，可以是 MediaId 或 EMoticonMd5\n\t * @param {string} to - 目标用户的 UserName\n\t * @returns {Promise<Object>} Promise 对象，表示发送消息结果的数据对象\n\t * @throws {Error} 如果发送消息失败，则会抛出异常\n\t */\n\tasync sendEmoticonMessage(id, to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tfun: \"sys\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tScene: 0,\n\t\t\t\tMsg: {\n\t\t\t\t\tType: this._config.MSGTYPE_EMOTICON,\n\t\t\t\t\tEmojiFlag: 2,\n\t\t\t\t\tToUserName: to,\n\t\t\t\t\tLocalID: clientMsgId,\n\t\t\t\t\tClientMsgId: clientMsgId,\n\t\t\t\t\tFromUserName: this._user[\"UserName\"],\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (id.indexOf(\"@\") === 0) {\n\t\t\t\tdata.Msg.MediaId = id;\n\t\t\t} else {\n\t\t\t\tdata.Msg.EMoticonMd5 = id;\n\t\t\t}\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxsendemoticon,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"发送表情信息失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 上传媒体文件\n\t * @param {Stream|Buffer} file - 要上传的文件流或缓冲区\n\t * @param {string} filename - 文件名（可选）\n\t * @param {string} toUserName - 接收方用户名（可选）\n\t * @returns {Promise<Object>} - 上传成功后返回的媒体信息对象\n\t */\n\tasync uploadMedia(file, filename, toUserName) {\n\t\ttry {\n\t\t\tlet name, type, size, ext, mediatype, data;\n\n\t\t\t// 根据不同类型的文件处理数据\n\t\t\tif ((typeof File !== \"undefined\" && file.constructor == File) || (typeof Blob !== \"undefined\" && file.constructor == Blob)) {\n\t\t\t\tname = file.name || \"file\";\n\t\t\t\ttype = file.type;\n\t\t\t\tsize = file.size;\n\t\t\t\tdata = file;\n\t\t\t} else if (Buffer.isBuffer(file)) {\n\t\t\t\tif (!filename) {\n\t\t\t\t\tthrow new Error(\"未知文件名\");\n\t\t\t\t}\n\t\t\t\tname = filename;\n\t\t\t\ttype = mime.lookup(name);\n\t\t\t\tsize = file.length;\n\t\t\t\tdata = file;\n\t\t\t} else if (file.readable) {\n\t\t\t\tif (!file.path && !filename) {\n\t\t\t\t\tthrow new Error(\"未知文件名\");\n\t\t\t\t}\n\t\t\t\tname = path.basename(file.path || filename);\n\t\t\t\ttype = mime.lookup(name);\n\t\t\t\tconst buffer = await new Promise((resolve, reject) => {\n\t\t\t\t\tfile.pipe(\n\t\t\t\t\t\tbl((err, buffer) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(buffer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tsize = buffer.length;\n\t\t\t\tdata = buffer;\n\t\t\t}\n\n\t\t\text = name.match(/.*\\.(.*)/);\n\t\t\text = ext ? ext[1].toLowerCase() : \"\";\n\n\t\t\t// 根据文件扩展名确定媒体类型\n\t\t\tswitch (ext) {\n\t\t\t\tcase \"bmp\":\n\t\t\t\tcase \"jpeg\":\n\t\t\t\tcase \"jpg\":\n\t\t\t\tcase \"png\":\n\t\t\t\t\tmediatype = \"pic\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"mp4\":\n\t\t\t\t\tmediatype = \"video\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tmediatype = \"doc\";\n\t\t\t}\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\n\t\t\tconst uploadMediaRequest = JSON.stringify({\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tClientMediaId: clientMsgId,\n\t\t\t\tTotalLen: size,\n\t\t\t\tStartPos: 0,\n\t\t\t\tDataLen: size,\n\t\t\t\tMediaType: 4,\n\t\t\t\tUploadType: 2,\n\t\t\t\tFromUserName: this._user.UserName,\n\t\t\t\tToUserName: toUserName || this._user.UserName,\n\t\t\t});\n\n\t\t\tconst form = new FormData();\n\t\t\tform.append(\"name\", name);\n\t\t\tform.append(\"type\", type);\n\t\t\tform.append(\"lastModifiedDate\", new Date().toGMTString());\n\t\t\tform.append(\"size\", size);\n\t\t\tform.append(\"mediatype\", mediatype);\n\t\t\tform.append(\"uploadmediarequest\", uploadMediaRequest);\n\t\t\tform.append(\"webwx_data_ticket\", this._prop.webwxDataTicket);\n\t\t\tform.append(\"pass_ticket\", encodeURI(this._prop.passTicket));\n\t\t\tform.append(\"filename\", data, {\n\t\t\t\tfilename: name,\n\t\t\t\tcontentType: type,\n\t\t\t\tknownLength: size,\n\t\t\t});\n\n\t\t\tconst formDataPromise = new Promise((resolve, reject) => {\n\t\t\t\tif (isBrowserEnv) {\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tdata: form,\n\t\t\t\t\t\theaders: {},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tform.pipe(\n\t\t\t\t\t\tbl((err, buffer) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\tdata: buffer,\n\t\t\t\t\t\t\t\t\theaders: form.getHeaders(),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 发起上传请求\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: { f: \"json\" },\n\t\t\t\tdata: null, // (await formDataPromise).data,\n\t\t\t\turl: this._config.API_webwxuploadmedia,\n\t\t\t\theaders: (await formDataPromise).headers,\n\t\t\t});\n\n\t\t\tconst mediaId = res.data.MediaId;\n\n\t\t\treturn {\n\t\t\t\tname: name,\n\t\t\t\tsize: size,\n\t\t\t\text: ext,\n\t\t\t\tmediatype: mediatype,\n\t\t\t\tmediaId: mediaId,\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"上传媒体文件失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 发送图片消息\n\t * @param {string} mediaId - 媒体文件的ID\n\t * @param {string} to - 接收方用户名\n\t * @returns {Promise<Object>} - 发送成功后返回的消息对象\n\t */\n\tasync sendPictureMessage(mediaId, to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tf: \"json\",\n\t\t\t\tfun: \"async\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tScene: 0,\n\t\t\t\tMsg: {\n\t\t\t\t\tType: this._config.MSGTYPE_IMAGE,\n\t\t\t\t\tMediaId: mediaId,\n\t\t\t\t\tToUserName: to,\n\t\t\t\t\tLocalID: clientMsgId,\n\t\t\t\t\tClientMsgId: clientMsgId,\n\t\t\t\t\tFromUserName: this._user.UserName,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxsendmsgimg,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"发送图片失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 发送视频消息\n\t * @param {string} mediaId - 媒体文件的ID\n\t * @param {string} to - 接收方用户名\n\t * @returns {Promise<Object>} - 发送成功后返回的消息对象\n\t */\n\tasync sendVideoMessage(mediaId, to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tf: \"json\",\n\t\t\t\tfun: \"async\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tScene: 0,\n\t\t\t\tMsg: {\n\t\t\t\t\tType: this._config.MSGTYPE_VIDEO,\n\t\t\t\t\tMediaId: mediaId,\n\t\t\t\t\tToUserName: to,\n\t\t\t\t\tLocalID: clientMsgId,\n\t\t\t\t\tClientMsgId: clientMsgId,\n\t\t\t\t\tFromUserName: this._user.UserName,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxsendmsgvedio,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"发送视频失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 发送文件消息\n\t * @param {string} mediaId - 媒体文件的ID\n\t * @param {string} name - 文件名\n\t * @param {number} size - 文件大小（字节）\n\t * @param {string} ext - 文件扩展名\n\t * @param {string} to - 接收方用户名\n\t * @returns {Promise<Object>} - 发送成功后返回的消息对象\n\t */\n\tasync sendDocumentMessage(mediaId, name, size, ext, to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tf: \"json\",\n\t\t\t\tfun: \"async\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\n\t\t\tconst content = `\n\t\t\t\t<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''>\n\t\t\t\t\t<title>${name}</title>\n\t\t\t\t\t<des></des>\n\t\t\t\t\t<action></action>\n\t\t\t\t\t<type>6</type>\n\t\t\t\t\t<content></content>\n\t\t\t\t\t<url></url>\n\t\t\t\t\t<lowurl></lowurl>\n\t\t\t\t\t<appattach>\n\t\t\t\t\t\t<totallen>${size}</totallen>\n\t\t\t\t\t\t<attachid>${mediaId}</attachid>\n\t\t\t\t\t\t<fileext>${ext}</fileext>\n\t\t\t\t\t</appattach>\n\t\t\t\t\t<extinfo></extinfo>\n\t\t\t\t</appmsg>`;\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tScene: 0,\n\t\t\t\tMsg: {\n\t\t\t\t\tType: this._config.APPMSGTYPE_ATTACH,\n\t\t\t\t\tContent: content,\n\t\t\t\t\tToUserName: to,\n\t\t\t\t\tLocalID: clientMsgId,\n\t\t\t\t\tClientMsgId: clientMsgId,\n\t\t\t\t\tFromUserName: this._user.UserName,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxsendappmsg,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"发送文件失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 转发消息\n\t * @param {Object} msg - 需要转发的消息对象\n\t * @param {string} to - 接收方用户名\n\t * @returns {Promise<Object>} - 转发成功后返回的消息对象\n\t */\n\tasync forwardMessage(msg, to) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tf: \"json\",\n\t\t\t\tfun: \"async\",\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst clientMsgId = generateClientMsgID();\n\t\t\tlet data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tScene: 2,\n\t\t\t\tMsg: {\n\t\t\t\t\tType: msg.MsgType,\n\t\t\t\t\tMediaId: \"\",\n\t\t\t\t\tContent: msg.Content.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\"),\n\t\t\t\t\tToUserName: to,\n\t\t\t\t\tLocalID: clientMsgId,\n\t\t\t\t\tClientMsgId: clientMsgId,\n\t\t\t\t\tFromUserName: this._user.UserName,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tlet url, pm;\n\t\t\tswitch (msg.MsgType) {\n\t\t\t\tcase this._config.MSGTYPE_TEXT:\n\t\t\t\t\turl = this._config.API_webwxsendmsg;\n\t\t\t\t\tif (msg.SubMsgType === this._config.MSGTYPE_LOCATION) {\n\t\t\t\t\t\tdata.Msg.Type = this._config.MSGTYPE_LOCATION;\n\t\t\t\t\t\tdata.Msg.Content = msg.OriContent.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._config.MSGTYPE_IMAGE:\n\t\t\t\t\turl = this._config.API_webwxsendmsgimg;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._config.MSGTYPE_EMOTICON:\n\t\t\t\t\tparams.fun = \"sys\";\n\t\t\t\t\turl = this._config.API_webwxsendemoticon;\n\t\t\t\t\tdata.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, \"$1\");\n\t\t\t\t\tif (!data.Msg.EMoticonMd5) {\n\t\t\t\t\t\tthrow new Error(\"商店表情不能转发\");\n\t\t\t\t\t}\n\t\t\t\t\tdata.Scene = 0;\n\t\t\t\t\tdata.Msg.EmojiFlag = 2;\n\t\t\t\t\tdelete data.Msg.MediaId;\n\t\t\t\t\tdelete data.Msg.Content;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._config.MSGTYPE_MICROVIDEO:\n\t\t\t\tcase this._config.MSGTYPE_VIDEO:\n\t\t\t\t\turl = this._config.API_webwxsendmsgvedio;\n\t\t\t\t\tdata.Msg.Type = this._config.MSGTYPE_VIDEO;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._config.MSGTYPE_APP:\n\t\t\t\t\turl = this._config.API_webwxsendappmsg;\n\t\t\t\t\tdata.Msg.Type = msg.AppMsgType;\n\t\t\t\t\tdata.Msg.Content = data.Msg.Content.replace(\n\t\t\t\t\t\t/^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\n\t\t\t\t\t\t`$1${msg.MediaId}$2`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"该消息类型不能直接转发\");\n\t\t\t}\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: url,\n\t\t\t});\n\n\t\t\tconst responseData = res.data;\n\t\t\tequal(responseData.BaseResponse.Ret, 0, res);\n\n\t\t\treturn responseData;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"转发消息失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 撤回消息\n\t * @param {string} msgId - 待撤回的消息ID\n\t * @param {string} toUserName - 消息所在的聊天对象的用户名\n\t * @returns {Promise<Object>} - 包含操作结果的对象\n\t */\n\tasync revokeMessage(msgId, toUserName) {\n\t\ttry {\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tSvrMsgId: msgId,\n\t\t\t\tToUserName: toUserName,\n\t\t\t\tClientMsgId: generateClientMsgID(),\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\turl: this._config.API_webwxrevokemsg,\n\t\t\t\tdata: data,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`撤回消息失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"撤回消息失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 获取消息图片或表情\n\t * @param {string} msgId - 消息ID\n\t * @returns {Promise<Object>} - 包含图片或表情数据和类型的对象\n\t */\n\tasync getMessageImg(msgId) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\ttype: \"big\",\n\t\t\t\tMsgID: msgId,\n\t\t\t\tskey: this._prop.skey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tparams: params,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\turl: this._config.API_webwxgetmsgimg,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tdata: res.data,\n\t\t\t\ttype: res.headers[\"content-type\"],\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取图片或表情失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 获取视频\n\t * @param {string} msgId - 消息ID\n\t * @returns {Promise<Object>} - 包含视频数据和类型的对象\n\t */\n\tasync getMessageVideo(msgId) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tMsgID: msgId,\n\t\t\t\tskey: this._prop.skey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\tRange: \"bytes=0-\",\n\t\t\t\t},\n\t\t\t\tparams: params,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\turl: this._config.API_webwxgetvideo,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tdata: res.data,\n\t\t\t\ttype: res.headers[\"content-type\"],\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取视频失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 获取声音\n\t * @param {string} msgId - 消息ID\n\t * @returns {Promise<Object>} - 包含声音数据和类型的对象\n\t */\n\tasync getMessageVoice(msgId) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tMsgID: msgId,\n\t\t\t\tskey: this._prop.skey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tparams: params,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\turl: this._config.API_webwxgetvoice,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tdata: res.data,\n\t\t\t\ttype: res.headers[\"content-type\"],\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取声音失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 获取头像图片\n\t * @param {string} HeadImgUrl - 头像图片的URL\n\t * @returns {Promise<Object>} - 包含头像图片数据和类型的对象\n\t */\n\tasync getHeadImg(HeadImgUrl) {\n\t\ttry {\n\t\t\tconst url = this._config.origin + HeadImgUrl;\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tdata: res.data,\n\t\t\t\ttype: res.headers[\"content-type\"],\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取头像失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 获取文件\n\t * @param {string} FromUserName - 发送者用户名\n\t * @param {string} MediaId - 文件的媒体ID\n\t * @param {string} FileName - 文件名\n\t * @returns {Promise<Object>} - 包含文件数据和类型的对象\n\t */\n\tasync getDocument(FromUserName, MediaId, FileName) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tsender: FromUserName,\n\t\t\t\tmediaid: MediaId,\n\t\t\t\tfilename: FileName,\n\t\t\t\tfromuser: this._user.UserName,\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t\twebwx_data_ticket: this._prop.webwxDataTicket,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tparams: params,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\turl: this._config.API_webwxdownloadmedia,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tdata: res.data,\n\t\t\t\ttype: res.headers[\"content-type\"],\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"获取文件失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 通过好友请求\n\t * @param {string} UserName - 好友的用户名\n\t * @param {string} Ticket - 好友的验证票据\n\t * @returns {Promise<Object>} - 包含通过好友请求后返回的数据的对象\n\t */\n\tasync verifyUser(UserName, Ticket) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tOpcode: 3,\n\t\t\t\tVerifyUserListSize: 1,\n\t\t\t\tVerifyUserList: [\n\t\t\t\t\t{\n\t\t\t\t\t\tValue: UserName,\n\t\t\t\t\t\tVerifyUserTicket: Ticket,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tVerifyContent: \"\",\n\t\t\t\tSceneListCount: 1,\n\t\t\t\tSceneList: [33],\n\t\t\t\tskey: this._prop.skey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxverifyuser,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`通过好友请求失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"通过好友请求失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 添加好友\n\t * @param {string} UserName - 好友的用户名\n\t * @param {string} [content=我是${this._user.NickName}] - 验证消息内容，默认为当前用户的昵称\n\t * @returns {Promise<Object>} - 包含添加好友后返回的数据的对象\n\t */\n\tasync addFriend(UserName, content = `我是${this._user.NickName}`) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tOpcode: 2,\n\t\t\t\tVerifyUserListSize: 1,\n\t\t\t\tVerifyUserList: [\n\t\t\t\t\t{\n\t\t\t\t\t\tValue: UserName,\n\t\t\t\t\t\tVerifyUserTicket: \"\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tVerifyContent: content,\n\t\t\t\tSceneListCount: 1,\n\t\t\t\tSceneList: [33],\n\t\t\t\tskey: this._prop.skey,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxverifyuser,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`添加好友失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"添加好友失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t// Topic: Chatroom name\n\t// MemberList format:\n\t// [\n\t//   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\n\t//   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\n\t// ]\n\t/**\n\t * 创建群聊\n\t * @param {string} Topic - 群聊的主题\n\t * @param {Array} MemberList - 成员列表，包含要邀请的成员的用户名\n\t * @returns {Promise<Object>} - 包含创建群聊后返回的数据的对象\n\t */\n\tasync createChatroom(Topic, MemberList) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tr: ~new Date(),\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tMemberCount: MemberList.length,\n\t\t\t\tMemberList: MemberList,\n\t\t\t\tTopic: Topic,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\turl: this._config.API_webwxcreatechatroom,\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`创建群失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"创建群失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 更新群聊信息（添加、删除或邀请成员）\n\t * @param {string} ChatRoomUserName - 群聊的用户名\n\t * @param {Array} MemberList - 成员列表，包含要操作的成员的用户名\n\t * @param {string} fun - 操作类型，可选值为 \"addmember\"、\"delmember\" 或 \"invitemember\"\n\t * @returns {Promise<Object>} - 包含更新群聊后返回的数据的对象\n\t */\n\tasync updateChatroom(ChatRoomUserName, MemberList, fun) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tfun: fun,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tChatRoomName: ChatRoomUserName,\n\t\t\t};\n\n\t\t\tif (fun === \"addmember\") {\n\t\t\t\tdata.AddMemberList = MemberList.toString();\n\t\t\t} else if (fun === \"delmember\") {\n\t\t\t\tdata.DelMemberList = MemberList.toString();\n\t\t\t} else if (fun === \"invitemember\") {\n\t\t\t\tdata.InviteMemberList = MemberList.toString();\n\t\t\t}\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxupdatechatroom,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`邀请或踢出群成员失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"邀请或踢出群成员失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 更新群名\n\t * @param {string} ChatRoomUserName - 群的用户名\n\t * @param {string} NewName - 群的新名字\n\t * @returns {Promise<void>} - 执行结果的Promise对象\n\t */\n\tasync updateChatRoomName(ChatRoomUserName, NewName) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tfun: \"modtopic\",\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tChatRoomName: ChatRoomUserName,\n\t\t\t\tNewTopic: NewName,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxupdatechatroom,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`更新群名失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"更新群名失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 更新联系人的备注名\n\t * @param {string} UserName - 联系人的用户名\n\t * @param {string} RemarkName - 联系人的备注名\n\t * @returns {Promise<Object>} - 包含操作结果的对象\n\t */\n\tasync updateRemarkName(UserName, RemarkName) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tlang: \"zh_CN\",\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tCmdId: 2,\n\t\t\t\tRemarkName: RemarkName,\n\t\t\t\tUserName: UserName,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxoplog,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`设置用户标签失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"设置用户标签失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * 置顶或取消置顶联系人\n\t * @param {string} UserName - 联系人的用户名\n\t * @param {number} OP - 操作类型，0表示取消置顶，1表示置顶\n\t * @param {string} RemarkName - 联系人的备注名\n\t * @returns {Promise<Object>} - 包含操作结果的对象\n\t */\n\tasync opLog(UserName, OP, RemarkName) {\n\t\ttry {\n\t\t\tconst params = {\n\t\t\t\tpass_ticket: this._prop.passTicket,\n\t\t\t};\n\n\t\t\tconst data = {\n\t\t\t\tBaseRequest: this._baseRequest(),\n\t\t\t\tCmdId: 3,\n\t\t\t\tOP: OP,\n\t\t\t\tRemarkName: RemarkName,\n\t\t\t\tUserName: UserName,\n\t\t\t};\n\n\t\t\tconst res = await this._request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tparams: params,\n\t\t\t\tdata: data,\n\t\t\t\turl: this._config.API_webwxoplog,\n\t\t\t});\n\n\t\t\tconst result = res.data;\n\t\t\tif (result.BaseResponse.Ret !== 0) {\n\t\t\t\tthrow new Error(`置顶或取消置顶失败: ${JSON.stringify(res)}`);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tdebug(err);\n\t\t\terr.tips = \"置顶或取消置顶失败\";\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n"]}