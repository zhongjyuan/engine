{"version":3,"sources":["../../../modules/weixin-server/src/utils/assert.js"],"names":["equal","notEqual","ok","debug","actual","expected","response","Assert","e","request"],"mappings":";;;;;QAcgBA,K,GAAAA,K;QAoBAC,Q,GAAAA,Q;QAmBAC,E,GAAAA,E;;AArDhB;;;;AACA;;;;;;AAEA,IAAMC,QAAQ,qBAAO,QAAP,CAAd;;AAEA;;;;;;;;;AASO,SAASH,KAAT,CAAeI,MAAf,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C;AACjD,KAAI;AACHC,mBAAOP,KAAP,CAAaI,MAAb,EAAqBC,QAArB;AACA,EAFD,CAEE,OAAOG,CAAP,EAAU;AACXL,QAAMK,CAAN;AACA,SAAOF,SAASG,OAAhB;AACAD,IAAEF,QAAF,GAAaA,QAAb;AACA,QAAME,CAAN;AACA;AACD;;AAED;;;;;;;;;AASO,SAASP,QAAT,CAAkBG,MAAlB,EAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;AACpD,KAAI;AACHC,mBAAON,QAAP,CAAgBG,MAAhB,EAAwBC,QAAxB;AACA,EAFD,CAEE,OAAOG,CAAP,EAAU;AACXL,QAAMK,CAAN;AACA,SAAOF,SAASG,OAAhB;AACAD,IAAEF,QAAF,GAAaA,QAAb;AACA,QAAME,CAAN;AACA;AACD;;AAED;;;;;;;;AAQO,SAASN,EAAT,CAAYE,MAAZ,EAAoBE,QAApB,EAA8B;AACpC,KAAI;AACHC,mBAAOL,EAAP,CAAUE,MAAV;AACA,EAFD,CAEE,OAAOI,CAAP,EAAU;AACXL,QAAMK,CAAN;AACA,SAAOF,SAASG,OAAhB;AACAD,IAAEF,QAAF,GAAaA,QAAb;AACA,QAAME,CAAN;AACA;AACD","file":"assert.js","sourcesContent":["import _debug from \"debug\";\r\nimport Assert from \"assert\";\r\n\r\nconst debug = _debug(\"assert\");\r\n\r\n/**\r\n * 断言实际值等于期望值\r\n * @param {*} actual - 实际值\r\n * @param {*} expected - 期望值\r\n * @param {object} response - HTTP 响应对象\r\n *\r\n * @example\r\n * assert.equal(2 + 2, 4, response);\r\n */\r\nexport function equal(actual, expected, response) {\r\n\ttry {\r\n\t\tAssert.equal(actual, expected);\r\n\t} catch (e) {\r\n\t\tdebug(e);\r\n\t\tdelete response.request;\r\n\t\te.response = response;\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n/**\r\n * 断言实际值不等于期望值\r\n * @param {*} actual - 实际值\r\n * @param {*} expected - 期望值\r\n * @param {object} response - HTTP 响应对象\r\n *\r\n * @example\r\n * assert.notEqual(2 + 2, 5, response);\r\n */\r\nexport function notEqual(actual, expected, response) {\r\n\ttry {\r\n\t\tAssert.notEqual(actual, expected);\r\n\t} catch (e) {\r\n\t\tdebug(e);\r\n\t\tdelete response.request;\r\n\t\te.response = response;\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n/**\r\n * 断言实际值为真\r\n * @param {*} actual - 实际值\r\n * @param {object} response - HTTP 响应对象\r\n *\r\n * @example\r\n * assert.ok(2 + 2 === 4, response);\r\n */\r\nexport function ok(actual, response) {\r\n\ttry {\r\n\t\tAssert.ok(actual);\r\n\t} catch (e) {\r\n\t\tdebug(e);\r\n\t\tdelete response.request;\r\n\t\te.response = response;\r\n\t\tthrow e;\r\n\t}\r\n}\r\n"]}