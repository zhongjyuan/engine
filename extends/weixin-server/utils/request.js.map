{"version":3,"sources":["../../../modules/weixin-server/src/utils/request.js"],"names":["Request","defaults","headers","isBrowserEnv","timeout","httpAgent","httpsAgent","axios","create","Cookie","interceptors","request","use","config","Object","keys","map","key","join","err","Promise","reject","response","res","setCookie","forEach","item","pm","match","options"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoCaA,O;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QADYA,O,GA4CZ,iBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACrB;AACAA,YAAWA,YAAY,EAAvB;AACAA,UAASC,OAAT,GAAmBD,SAASC,OAAT,IAAoB,EAAvC;;AAEA;AACA,KAAI,CAACC,oBAAL,EAAmB;AAClBF,WAASC,OAAT,CAAiB,YAAjB,IACCD,SAASC,OAAT,CAAiB,YAAjB,KACA,2HAFD;AAGAD,WAASC,OAAT,CAAiB,YAAjB,IAAiCD,SAASC,OAAT,CAAiB,YAAjB,KAAkC,OAAnE;AACA;;AAED;AACAD,UAASG,OAAT,GAAmB,OAAO,EAA1B;AACAH,UAASI,SAAT,GAAqB,KAArB;AACAJ,UAASK,UAAT,GAAsB,KAAtB;;AAEA;AACA,MAAKC,KAAL,GAAaA,gBAAMC,MAAN,CAAaP,QAAb,CAAb;;AAEA;AACA,KAAI,CAACE,oBAAL,EAAmB;AAClB;AACA,OAAKM,MAAL,GAAcR,SAASQ,MAAT,IAAmB,EAAjC;AACA,OAAKA,MAAL,CAAY,SAAZ,IAAyB,2BAAzB;AACA,OAAKA,MAAL,CAAY,QAAZ,IAAwB,0BAAa,GAAb,CAAxB;;AAEA;AACA,OAAKF,KAAL,CAAWG,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CACC,UAACC,MAAD,EAAY;AACXA,UAAOX,OAAP,CAAe,QAAf,IAA2BY,OAAOC,IAAP,CAAY,MAAKN,MAAjB,EACzBO,GADyB,CACrB,UAACC,GAAD,EAAS;AACb,WAAUA,GAAV,SAAiB,MAAKR,MAAL,CAAYQ,GAAZ,CAAjB;AACA,IAHyB,EAIzBC,IAJyB,CAIpB,IAJoB,CAA3B;AAKA,UAAOL,MAAP;AACA,GARF,EASC,UAACM,GAAD,EAAS;AACR,UAAOC,QAAQC,MAAR,CAAeF,GAAf,CAAP;AACA,GAXF;;AAcA;AACA,OAAKZ,KAAL,CAAWG,YAAX,CAAwBY,QAAxB,CAAiCV,GAAjC,CACC,UAACW,GAAD,EAAS;AACR,OAAIC,YAAYD,IAAIrB,OAAJ,CAAY,YAAZ,CAAhB;AACA,OAAIsB,SAAJ,EAAe;AACdA,cAAUC,OAAV,CAAkB,UAACC,IAAD,EAAU;AAC3B,SAAIC,KAAKD,KAAKE,KAAL,CAAW,sBAAX,CAAT;AACA,SAAID,EAAJ,EAAQ;AACP,YAAKlB,MAAL,CAAYkB,GAAG,CAAH,CAAZ,IAAqBA,GAAG,CAAH,CAArB;AACA;AACD,KALD;AAMA;AACD,UAAOJ,GAAP;AACA,GAZF,EAaC,UAACJ,GAAD,EAAS;AACR,OAAIA,OAAOA,IAAIG,QAAf,EAAyB;AACxB,WAAOH,IAAIG,QAAJ,CAAaX,OAApB;AACA,WAAOQ,IAAIG,QAAJ,CAAaT,MAApB;AACA;AACD,UAAOO,QAAQC,MAAR,CAAeF,GAAf,CAAP;AACA,GAnBF;AAqBA;;AAED;AACA,MAAKR,OAAL,GAAe,UAACkB,OAAD,EAAa;AAC3B,SAAO,MAAKtB,KAAL,CAAWI,OAAX,CAAmBkB,OAAnB,CAAP;AACA,EAFD;;AAIA,QAAO,KAAKlB,OAAZ;AACA,C","file":"request.js","sourcesContent":["import axios from \"axios\";\nimport { isBrowserEnv, randomString } from \"./global\";\n\n/**\n * 创建一个用于发送 HTTP 请求的实例\n * @param {object} defaults - 默认配置选项\n * @returns {function} - 发送请求的函数\n *\n * @example\n * const request = Request({\n *   headers: {\n *     \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36\",\n *     \"connection\": \"close\"\n *   },\n *   timeout: 60000,\n *   httpAgent: false,\n *   httpsAgent: false,\n *   Cookie: {\n *     pgv_pvi: randomString(),\n *     pgv_si: randomString(\"s\")\n *   }\n * });\n *\n * const options = {\n *   method: \"GET\",\n *   url: \"https://api.zhongjyuan.com/data\",\n *   params: {\n *     id: 12345\n *   }\n * };\n *\n * request(options)\n *   .then((response) => {\n *     console.log(response.data);\n *   })\n *   .catch((error) => {\n *     console.error(error);\n *   });\n */\nexport class Request {\n\t/**\n\t * 构造函数\n\t *\n\t * @constructor\n\t * @param {object} [defaults] - 默认配置项\n\t * @param {object} [defaults.headers] - 默认请求头\n\t * @param {string} [defaults.headers.user-agent] - 默认 User-Agent 头\n\t * @param {string} [defaults.headers.connection] - 默认 Connection 头\n\t * @param {number} [defaults.timeout=60000] - 默认超时时间（毫秒）\n\t * @param {boolean} [defaults.httpAgent=false] - 是否开启 HTTP Keep-Alive\n\t * @param {boolean} [defaults.httpsAgent=false] - 是否开启 HTTPS Keep-Alive\n\t *\n\t * @example\n\t * const request = Request({\n\t *   headers: {\n\t *     \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36\",\n\t *     \"connection\": \"close\"\n\t *   },\n\t *   timeout: 60000,\n\t *   httpAgent: false,\n\t *   httpsAgent: false,\n\t *   Cookie: {\n\t *     pgv_pvi: randomString(),\n\t *     pgv_si: randomString(\"s\")\n\t *   }\n\t * });\n\t *\n\t * const options = {\n\t *   method: \"GET\",\n\t *   url: \"https://api.zhongjyuan.com/data\",\n\t *   params: {\n\t *     id: 12345\n\t *   }\n\t * };\n\t *\n\t * request(options)\n\t *   .then((response) => {\n\t *     console.log(response.data);\n\t *   })\n\t *   .catch((error) => {\n\t *     console.error(error);\n\t *   });\n\t */\n\tconstructor(defaults) {\n\t\t// 对传入的默认配置进行处理\n\t\tdefaults = defaults || {};\n\t\tdefaults.headers = defaults.headers || {};\n\n\t\t// 如果不是浏览器环境，则设置默认 User-Agent 和 Connection 头\n\t\tif (!isBrowserEnv) {\n\t\t\tdefaults.headers[\"user-agent\"] =\n\t\t\t\tdefaults.headers[\"user-agent\"] ||\n\t\t\t\t\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36\";\n\t\t\tdefaults.headers[\"connection\"] = defaults.headers[\"connection\"] || \"close\";\n\t\t}\n\n\t\t// 设置默认超时时间、HTTP Keep-Alive 和 HTTPS Keep-Alive\n\t\tdefaults.timeout = 1000 * 60;\n\t\tdefaults.httpAgent = false;\n\t\tdefaults.httpsAgent = false;\n\n\t\t// 创建 Axios 实例\n\t\tthis.axios = axios.create(defaults);\n\n\t\t// 如果不是浏览器环境，则设置 Cookie 和拦截器\n\t\tif (!isBrowserEnv) {\n\t\t\t// 初始化 Cookie，并生成随机的 pgv_pvi 和 pgv_si 属性\n\t\t\tthis.Cookie = defaults.Cookie || {};\n\t\t\tthis.Cookie[\"pgv_pvi\"] = randomString();\n\t\t\tthis.Cookie[\"pgv_si\"] = randomString(\"s\");\n\n\t\t\t// 添加请求拦截器，将 Cookie 添加到请求头中\n\t\t\tthis.axios.interceptors.request.use(\n\t\t\t\t(config) => {\n\t\t\t\t\tconfig.headers[\"cookie\"] = Object.keys(this.Cookie)\n\t\t\t\t\t\t.map((key) => {\n\t\t\t\t\t\t\treturn `${key}=${this.Cookie[key]}`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"; \");\n\t\t\t\t\treturn config;\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// 添加响应拦截器，解析 Set-Cookie 头并更新 Cookie\n\t\t\tthis.axios.interceptors.response.use(\n\t\t\t\t(res) => {\n\t\t\t\t\tlet setCookie = res.headers[\"set-cookie\"];\n\t\t\t\t\tif (setCookie) {\n\t\t\t\t\t\tsetCookie.forEach((item) => {\n\t\t\t\t\t\t\tlet pm = item.match(/^(.+?)\\s?\\=\\s?(.+?);/);\n\t\t\t\t\t\t\tif (pm) {\n\t\t\t\t\t\t\t\tthis.Cookie[pm[1]] = pm[2];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tif (err && err.response) {\n\t\t\t\t\t\tdelete err.response.request;\n\t\t\t\t\t\tdelete err.response.config;\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// 返回一个封装好的请求方法\n\t\tthis.request = (options) => {\n\t\t\treturn this.axios.request(options);\n\t\t};\n\n\t\treturn this.request;\n\t}\n}\n"]}